; This file has been disassembled using luadec 2.0 UNICODE by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis -f 4 todo\ChannelsSimulator.luac 

; Name:            
; Defined at line: 1
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R0 K0        ; R0 := BF_ChannelsSimulator
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["BigFoot_5f64b171232f3a1579d5f9f0bb50931f"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := this
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["bGuideCheckBox"]
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: JMP       560          ; PC := 560
  8 [-]: GETGLOBAL R1 K2        ; R1 := this
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["dwID"]
 10 [-]: TEST      R1 0         ; if not R1 then PC := 560
 11 [-]: JMP       560          ; PC := 560
 12 [-]: LOADK     R1 K5        ; R1 := ""
 13 [-]: GETGLOBAL R2 K2        ; R2 := this
 14 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["GetAbsPos"]
 15 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
 16 [-]: GETGLOBAL R4 K2        ; R4 := this
 17 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["GetSize"]
 18 [-]: CALL      R4 2 3       ; R4,R5 := R4(R5)
 19 [-]: GETGLOBAL R6 K2        ; R6 := this
 20 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["dwID"]
 21 [-]: GETGLOBAL R7 K8        ; R7 := GetClientPlayer
 22 [-]: CALL      R7 1 2       ; R7 := R7()
 23 [-]: LOADNIL   R8 R8        ; R8 := nil
 24 [-]: GETGLOBAL R9 K0        ; R9 := BF_ChannelsSimulator
 25 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["emulate"]
 26 [-]: TEST      R9 0         ; if not R9 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETTABLE  R9 R0 R6     ; R9 := R0[R6]
 29 [-]: TESTSET   R8 R9 1      ; if R9 then PC := 32 else R8 := R9
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADK     R8 K10       ; R8 := 0
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETTABLE  R9 R7 K11    ; R9 := R7["GetSkillLevel"]
 34 [-]: MOVE      R10 R6       ; R10 := R6
 35 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 36 [-]: MOVE      R8 R9        ; R8 := R9
 37 [-]: MOVE      R9 R8        ; R9 := R8
 38 [-]: EQ        0 R9 K10     ; if R9 ~= 0 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: LOADK     R9 K12       ; R9 := 1
 41 [-]: GETGLOBAL R10 K13      ; R10 := GetSkill
 42 [-]: MOVE      R11 R6       ; R11 := R6
 43 [-]: MOVE      R12 R9       ; R12 := R9
 44 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 45 [-]: GETGLOBAL R11 K2       ; R11 := this
 46 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["bAlone"]
 47 [-]: TEST      R11 0        ; if not R11 then PC := 129
 48 [-]: JMP       129          ; PC := 129
 49 [-]: MOVE      R11 R1       ; R11 := R1
 50 [-]: LOADK     R12 K15      ; R12 := "<text>text="
 51 [-]: GETGLOBAL R13 K16      ; R13 := EncodeComponentsString
 52 [-]: GETGLOBAL R14 K17      ; R14 := Table_GetSkillName
 53 [-]: MOVE      R15 R6       ; R15 := R6
 54 [-]: MOVE      R16 R8       ; R16 := R8
 55 [-]: CALL      R14 3 0      ; R14 to top := R14(R15,R16)
 56 [-]: CALL      R13 0 2      ; R13 := R13(R14 to top)
 57 [-]: LOADK     R14 K18      ; R14 := " font=31 </text><text>text="
 58 [-]: GETGLOBAL R15 K16      ; R15 := EncodeComponentsString
 59 [-]: GETGLOBAL R16 K19      ; R16 := FormatString
 60 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
 61 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["STR_SKILL_H_THE_WHAT_LEVEL"]
 62 [-]: MOVE      R18 R8       ; R18 := R8
 63 [-]: LOADK     R19 K22      ; R19 := "/"
 64 [-]: GETTABLE  R20 R10 K23  ; R20 := R10["dwMaxLevel"]
 65 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
 66 [-]: CALL      R16 3 0      ; R16 to top := R16(R17,R18)
 67 [-]: CALL      R15 0 2      ; R15 := R15(R16 to top)
 68 [-]: LOADK     R16 K24      ; R16 := " font=61 </text>"
 69 [-]: CONCAT    R1 R11 R16   ; R1 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
 70 [-]: LOADK     R11 K5       ; R11 := ""
 71 [-]: EQ        0 R8 K10     ; if R8 ~= 0 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETGLOBAL R12 K25      ; R12 := Table_GetSkillDesc
 74 [-]: MOVE      R13 R6       ; R13 := R6
 75 [-]: MOVE      R14 R8       ; R14 := R8
 76 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 77 [-]: MOVE      R11 R12      ; R11 := R12
 78 [-]: JMP       93           ; PC := 93
 79 [-]: GETTABLE  R12 R7 K26   ; R12 := R7["GetSkillRecipeKey"]
 80 [-]: MOVE      R13 R6       ; R13 := R6
 81 [-]: MOVE      R14 R8       ; R14 := R8
 82 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 83 [-]: GETGLOBAL R13 K27      ; R13 := GetSkillInfo
 84 [-]: MOVE      R14 R12      ; R14 := R12
 85 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 86 [-]: GETGLOBAL R14 K28      ; R14 := GetSkillDesc
 87 [-]: MOVE      R15 R6       ; R15 := R6
 88 [-]: MOVE      R16 R8       ; R16 := R8
 89 [-]: MOVE      R17 R12      ; R17 := R12
 90 [-]: MOVE      R18 R13      ; R18 := R13
 91 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 92 [-]: MOVE      R11 R14      ; R11 := R14
 93 [-]: EQ        1 R11 K5     ; if R11 == "" then PC := 104
 94 [-]: JMP       104          ; PC := 104
 95 [-]: MOVE      R12 R1       ; R12 := R1
 96 [-]: LOADK     R13 K15      ; R13 := "<text>text="
 97 [-]: GETGLOBAL R14 K16      ; R14 := EncodeComponentsString
 98 [-]: MOVE      R15 R11      ; R15 := R11
 99 [-]: LOADK     R16 K29      ; R16 := "\n"
100 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
101 [-]: CALL      R14 2 2      ; R14 := R14(R15)
102 [-]: LOADK     R15 K30      ; R15 := " font=100 </text>"
103 [-]: CONCAT    R1 R12 R15   ; R1 := R12 .. R13 .. R14 .. R15
104 [-]: LOADK     R8 K31       ; R8 := 9999
105 [-]: GETGLOBAL R12 K25      ; R12 := Table_GetSkillDesc
106 [-]: MOVE      R13 R6       ; R13 := R6
107 [-]: MOVE      R14 R8       ; R14 := R8
108 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
109 [-]: EQ        1 R12 K5     ; if R12 == "" then PC := 118
110 [-]: JMP       118          ; PC := 118
111 [-]: MOVE      R13 R1       ; R13 := R1
112 [-]: LOADK     R14 K15      ; R14 := "<text>text="
113 [-]: GETGLOBAL R15 K16      ; R15 := EncodeComponentsString
114 [-]: MOVE      R16 R12      ; R16 := R12
115 [-]: CALL      R15 2 2      ; R15 := R15(R16)
116 [-]: LOADK     R16 K30      ; R16 := " font=100 </text>"
117 [-]: CONCAT    R1 R13 R16   ; R1 := R13 .. R14 .. R15 .. R16
118 [-]: GETGLOBAL R13 K32      ; R13 := OutputTip
119 [-]: MOVE      R14 R1       ; R14 := R1
120 [-]: LOADK     R15 K33      ; R15 := 300
121 [-]: NEWTABLE  R16 4 0      ; R16 := {}
122 [-]: MOVE      R17 R2       ; R17 := R2
123 [-]: MOVE      R18 R3       ; R18 := R3
124 [-]: MOVE      R19 R4       ; R19 := R4
125 [-]: MOVE      R20 R5       ; R20 := R5
126 [-]: SETLIST   R16 4 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 4
127 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
128 [-]: RETURN    R0 1         ; return 
129 [-]: MOVE      R11 R1       ; R11 := R1
130 [-]: LOADK     R12 K15      ; R12 := "<text>text="
131 [-]: GETGLOBAL R13 K16      ; R13 := EncodeComponentsString
132 [-]: GETGLOBAL R14 K17      ; R14 := Table_GetSkillName
133 [-]: MOVE      R15 R6       ; R15 := R6
134 [-]: MOVE      R16 R9       ; R16 := R9
135 [-]: CALL      R14 3 0      ; R14 to top := R14(R15,R16)
136 [-]: CALL      R13 0 2      ; R13 := R13(R14 to top)
137 [-]: LOADK     R14 K18      ; R14 := " font=31 </text><text>text="
138 [-]: GETGLOBAL R15 K16      ; R15 := EncodeComponentsString
139 [-]: GETGLOBAL R16 K19      ; R16 := FormatString
140 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
141 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["STR_SKILL_H_THE_WHAT_LEVEL"]
142 [-]: MOVE      R18 R9       ; R18 := R9
143 [-]: LOADK     R19 K22      ; R19 := "/"
144 [-]: GETTABLE  R20 R10 K23  ; R20 := R10["dwMaxLevel"]
145 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
146 [-]: CALL      R16 3 0      ; R16 to top := R16(R17,R18)
147 [-]: CALL      R15 0 2      ; R15 := R15(R16 to top)
148 [-]: LOADK     R16 K24      ; R16 := " font=61 </text>"
149 [-]: CONCAT    R1 R11 R16   ; R1 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
150 [-]: EQ        1 R8 K10     ; if R8 == 0 then PC := 214
151 [-]: JMP       214          ; PC := 214
152 [-]: GETTABLE  R11 R7 K26   ; R11 := R7["GetSkillRecipeKey"]
153 [-]: MOVE      R12 R6       ; R12 := R6
154 [-]: MOVE      R13 R8       ; R13 := R8
155 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
156 [-]: GETGLOBAL R12 K27      ; R12 := GetSkillInfo
157 [-]: MOVE      R13 R11      ; R13 := R11
158 [-]: CALL      R12 2 2      ; R12 := R12(R13)
159 [-]: GETGLOBAL R13 K28      ; R13 := GetSkillDesc
160 [-]: MOVE      R14 R6       ; R14 := R6
161 [-]: MOVE      R15 R8       ; R15 := R8
162 [-]: MOVE      R16 R11      ; R16 := R11
163 [-]: MOVE      R17 R12      ; R17 := R12
164 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
165 [-]: EQ        1 R13 K5     ; if R13 == "" then PC := 184
166 [-]: JMP       184          ; PC := 184
167 [-]: MOVE      R14 R1       ; R14 := R1
168 [-]: LOADK     R15 K15      ; R15 := "<text>text="
169 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
170 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
171 [-]: GETTABLE  R17 R17 K34  ; R17 := R17["CURRENT_LEVEL"]
172 [-]: CALL      R16 2 2      ; R16 := R16(R17)
173 [-]: LOADK     R17 K35      ; R17 := " font=106 </text>"
174 [-]: CONCAT    R1 R14 R17   ; R1 := R14 .. R15 .. R16 .. R17
175 [-]: MOVE      R14 R1       ; R14 := R1
176 [-]: LOADK     R15 K15      ; R15 := "<text>text="
177 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
178 [-]: MOVE      R17 R13      ; R17 := R13
179 [-]: LOADK     R18 K29      ; R18 := "\n"
180 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
181 [-]: CALL      R16 2 2      ; R16 := R16(R17)
182 [-]: LOADK     R17 K30      ; R17 := " font=100 </text>"
183 [-]: CONCAT    R1 R14 R17   ; R1 := R14 .. R15 .. R16 .. R17
184 [-]: GETTABLE  R14 R10 K23  ; R14 := R10["dwMaxLevel"]
185 [-]: EQ        0 R8 R14     ; if R8 ~= R14 then PC := 206
186 [-]: JMP       206          ; PC := 206
187 [-]: MOVE      R14 R1       ; R14 := R1
188 [-]: LOADK     R15 K15      ; R15 := "<text>text="
189 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
190 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
191 [-]: GETTABLE  R17 R17 K36  ; R17 := R17["STR_SKILL_H_TOP_LEAVEL"]
192 [-]: CALL      R16 2 2      ; R16 := R16(R17)
193 [-]: LOADK     R17 K35      ; R17 := " font=106 </text>"
194 [-]: CONCAT    R1 R14 R17   ; R1 := R14 .. R15 .. R16 .. R17
195 [-]: GETGLOBAL R14 K32      ; R14 := OutputTip
196 [-]: MOVE      R15 R1       ; R15 := R1
197 [-]: LOADK     R16 K33      ; R16 := 300
198 [-]: NEWTABLE  R17 4 0      ; R17 := {}
199 [-]: MOVE      R18 R2       ; R18 := R2
200 [-]: MOVE      R19 R3       ; R19 := R3
201 [-]: MOVE      R20 R4       ; R20 := R4
202 [-]: MOVE      R21 R5       ; R21 := R5
203 [-]: SETLIST   R17 4 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 4
204 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
205 [-]: RETURN    R0 1         ; return 
206 [-]: MOVE      R14 R1       ; R14 := R1
207 [-]: LOADK     R15 K15      ; R15 := "<text>text="
208 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
209 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
210 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["STR_NEXT_LEVEL"]
211 [-]: CALL      R16 2 2      ; R16 := R16(R17)
212 [-]: LOADK     R17 K35      ; R17 := " font=106 </text>"
213 [-]: CONCAT    R1 R14 R17   ; R1 := R14 .. R15 .. R16 .. R17
214 [-]: ADD       R8 R8 K12    ; R8 := R8 + 1
215 [-]: LOADBOOL  R11 0 0      ; R11 := false
216 [-]: GETGLOBAL R12 K38      ; R12 := VenationRequireLevel
217 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
218 [-]: TEST      R12 0        ; if not R12 then PC := 262
219 [-]: JMP       262          ; PC := 262
220 [-]: LOADK     R12 K39      ; R12 := 106
221 [-]: GETGLOBAL R13 K0       ; R13 := BF_ChannelsSimulator
222 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["emulate"]
223 [-]: TEST      R13 1        ; if R13 then PC := 232
224 [-]: JMP       232          ; PC := 232
225 [-]: GETGLOBAL R13 K38      ; R13 := VenationRequireLevel
226 [-]: GETTABLE  R13 R13 R6   ; R13 := R13[R6]
227 [-]: GETTABLE  R14 R7 K40   ; R14 := R7["nLevel"]
228 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 232
229 [-]: JMP       232          ; PC := 232
230 [-]: LOADK     R12 K41      ; R12 := 102
231 [-]: JMP       243          ; PC := 243
232 [-]: GETGLOBAL R13 K0       ; R13 := BF_ChannelsSimulator
233 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["emulate"]
234 [-]: TEST      R13 0        ; if not R13 then PC := 243
235 [-]: JMP       243          ; PC := 243
236 [-]: GETGLOBAL R13 K38      ; R13 := VenationRequireLevel
237 [-]: GETTABLE  R13 R13 R6   ; R13 := R13[R6]
238 [-]: GETGLOBAL R14 K0       ; R14 := BF_ChannelsSimulator
239 [-]: GETTABLE  R14 R14 K42  ; R14 := R14["Level"]
240 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 243
241 [-]: JMP       243          ; PC := 243
242 [-]: LOADK     R12 K41      ; R12 := 102
243 [-]: MOVE      R13 R1       ; R13 := R1
244 [-]: LOADK     R14 K15      ; R14 := "<text>text="
245 [-]: GETGLOBAL R15 K16      ; R15 := EncodeComponentsString
246 [-]: GETGLOBAL R16 K20      ; R16 := g_tStrings
247 [-]: GETTABLE  R16 R16 K43  ; R16 := R16["STR_LEARN_NEED_LEVEL1"]
248 [-]: CALL      R15 2 2      ; R15 := R15(R16)
249 [-]: LOADK     R16 K44      ; R16 := " font=106</text>"
250 [-]: CONCAT    R1 R13 R16   ; R1 := R13 .. R14 .. R15 .. R16
251 [-]: MOVE      R13 R1       ; R13 := R1
252 [-]: LOADK     R14 K15      ; R14 := "<text>text="
253 [-]: GETGLOBAL R15 K16      ; R15 := EncodeComponentsString
254 [-]: GETGLOBAL R16 K38      ; R16 := VenationRequireLevel
255 [-]: GETTABLE  R16 R16 R6   ; R16 := R16[R6]
256 [-]: CALL      R15 2 2      ; R15 := R15(R16)
257 [-]: LOADK     R16 K45      ; R16 := " font="
258 [-]: MOVE      R17 R12      ; R17 := R12
259 [-]: LOADK     R18 K46      ; R18 := "</text>"
260 [-]: CONCAT    R1 R13 R18   ; R1 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
261 [-]: LOADBOOL  R11 1 0      ; R11 := true
262 [-]: GETGLOBAL R12 K47      ; R12 := VenationCost
263 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
264 [-]: TEST      R12 0        ; if not R12 then PC := 320
265 [-]: JMP       320          ; PC := 320
266 [-]: GETGLOBAL R12 K47      ; R12 := VenationCost
267 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
268 [-]: GETTABLE  R12 R12 R8   ; R12 := R12[R8]
269 [-]: TEST      R12 0        ; if not R12 then PC := 320
270 [-]: JMP       320          ; PC := 320
271 [-]: LOADK     R12 K39      ; R12 := 106
272 [-]: GETGLOBAL R13 K48      ; R13 := math
273 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["floor"]
274 [-]: GETGLOBAL R14 K0       ; R14 := BF_ChannelsSimulator
275 [-]: GETTABLE  R14 R14 K50  ; R14 := R14["GetActualCostTrain"]
276 [-]: MOVE      R15 R7       ; R15 := R7
277 [-]: GETGLOBAL R16 K47      ; R16 := VenationCost
278 [-]: GETTABLE  R16 R16 R6   ; R16 := R16[R6]
279 [-]: GETTABLE  R16 R16 R8   ; R16 := R16[R8]
280 [-]: CALL      R14 3 0      ; R14 to top := R14(R15,R16)
281 [-]: CALL      R13 0 2      ; R13 := R13(R14 to top)
282 [-]: GETGLOBAL R14 K0       ; R14 := BF_ChannelsSimulator
283 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["emulate"]
284 [-]: TEST      R14 0        ; if not R14 then PC := 296
285 [-]: JMP       296          ; PC := 296
286 [-]: GETGLOBAL R14 K0       ; R14 := BF_ChannelsSimulator
287 [-]: GETTABLE  R14 R14 K51  ; R14 := R14["preview"]
288 [-]: TEST      R14 1        ; if R14 then PC := 300
289 [-]: JMP       300          ; PC := 300
290 [-]: GETGLOBAL R14 K0       ; R14 := BF_ChannelsSimulator
291 [-]: GETTABLE  R14 R14 K52  ; R14 := R14["BigFoot_2cce3085b1cc1a5a7245e15eb15402e8"]
292 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 300
293 [-]: JMP       300          ; PC := 300
294 [-]: LOADK     R12 K41      ; R12 := 102
295 [-]: JMP       300          ; PC := 300
296 [-]: GETTABLE  R14 R7 K53   ; R14 := R7["nCurrentTrainValue"]
297 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 300
298 [-]: JMP       300          ; PC := 300
299 [-]: LOADK     R12 K41      ; R12 := 102
300 [-]: TEST      R11 0        ; if not R11 then PC := 305
301 [-]: JMP       305          ; PC := 305
302 [-]: MOVE      R14 R1       ; R14 := R1
303 [-]: LOADK     R15 K54      ; R15 := "<text>text=\"\\\t\" font=106 </text>"
304 [-]: CONCAT    R1 R14 R15   ; R1 := R14 .. R15
305 [-]: MOVE      R14 R1       ; R14 := R1
306 [-]: LOADK     R15 K55      ; R15 := "<handle>handletype=3<text>text="
307 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
308 [-]: GETGLOBAL R17 K20      ; R17 := g_tStrings
309 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["STR_LEARN_COST_VENATION"]
310 [-]: CALL      R16 2 2      ; R16 := R16(R17)
311 [-]: LOADK     R17 K44      ; R17 := " font=106</text>"
312 [-]: LOADK     R18 K15      ; R18 := "<text>text="
313 [-]: GETGLOBAL R19 K16      ; R19 := EncodeComponentsString
314 [-]: MOVE      R20 R13      ; R20 := R13
315 [-]: CALL      R19 2 2      ; R19 := R19(R20)
316 [-]: LOADK     R20 K45      ; R20 := " font="
317 [-]: MOVE      R21 R12      ; R21 := R12
318 [-]: LOADK     R22 K57      ; R22 := "</text></handle>"
319 [-]: CONCAT    R1 R14 R22   ; R1 := R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
320 [-]: LOADK     R12 K58      ; R12 := 100
321 [-]: GETGLOBAL R13 K59      ; R13 := VenationDifficult
322 [-]: GETTABLE  R13 R13 R6   ; R13 := R13[R6]
323 [-]: TEST      R13 0        ; if not R13 then PC := 367
324 [-]: JMP       367          ; PC := 367
325 [-]: GETGLOBAL R13 K59      ; R13 := VenationDifficult
326 [-]: GETTABLE  R13 R13 R6   ; R13 := R13[R6]
327 [-]: GETTABLE  R13 R13 R8   ; R13 := R13[R8]
328 [-]: TEST      R13 0        ; if not R13 then PC := 367
329 [-]: JMP       367          ; PC := 367
330 [-]: LOADK     R13 K10      ; R13 := 0
331 [-]: GETGLOBAL R14 K60      ; R14 := VenationType
332 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
333 [-]: GETGLOBAL R15 K61      ; R15 := BASE_VENATION
334 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 338
335 [-]: JMP       338          ; PC := 338
336 [-]: GETTABLE  R13 R7 K62   ; R13 := R7["nBaseVenationCof"]
337 [-]: JMP       358          ; PC := 358
338 [-]: GETGLOBAL R14 K60      ; R14 := VenationType
339 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
340 [-]: GETGLOBAL R15 K63      ; R15 := ASSIST_VENATION
341 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 345
342 [-]: JMP       345          ; PC := 345
343 [-]: GETTABLE  R13 R7 K64   ; R13 := R7["nAssistVenationCof"]
344 [-]: JMP       358          ; PC := 358
345 [-]: GETGLOBAL R14 K60      ; R14 := VenationType
346 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
347 [-]: GETGLOBAL R15 K65      ; R15 := PHYSICS_VENATION
348 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 352
349 [-]: JMP       352          ; PC := 352
350 [-]: GETTABLE  R13 R7 K66   ; R13 := R7["nPhysicsVenationCof"]
351 [-]: JMP       358          ; PC := 358
352 [-]: GETGLOBAL R14 K60      ; R14 := VenationType
353 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
354 [-]: GETGLOBAL R15 K67      ; R15 := MAGIC_VENATION
355 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 358
356 [-]: JMP       358          ; PC := 358
357 [-]: GETTABLE  R13 R7 K68   ; R13 := R7["nMagicVenationCof"]
358 [-]: GETGLOBAL R14 K59      ; R14 := VenationDifficult
359 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
360 [-]: GETTABLE  R14 R14 R8   ; R14 := R14[R8]
361 [-]: ADD       R14 R13 R14  ; R14 := R13 + R14
362 [-]: MUL       R14 K58 R14  ; R14 := 100 * R14
363 [-]: DIV       R12 R14 K69  ; R12 := R14 / 1024
364 [-]: LT        0 K58 R12    ; if 100 >= R12 then PC := 367
365 [-]: JMP       367          ; PC := 367
366 [-]: LOADK     R12 K58      ; R12 := 100
367 [-]: ADD       R12 R12 K70  ; R12 := R12 + 0.5
368 [-]: MOD       R13 R12 K12  ; R13 := R12 % 1
369 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
370 [-]: LOADK     R13 K5       ; R13 := ""
371 [-]: GETGLOBAL R14 K47      ; R14 := VenationCost
372 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
373 [-]: TEST      R14 0        ; if not R14 then PC := 410
374 [-]: JMP       410          ; PC := 410
375 [-]: GETGLOBAL R14 K47      ; R14 := VenationCost
376 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
377 [-]: GETTABLE  R14 R14 R8   ; R14 := R14[R8]
378 [-]: TEST      R14 0        ; if not R14 then PC := 410
379 [-]: JMP       410          ; PC := 410
380 [-]: GETGLOBAL R14 K48      ; R14 := math
381 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["floor"]
382 [-]: GETGLOBAL R15 K71      ; R15 := GetRestoreTrain
383 [-]: MOVE      R16 R7       ; R16 := R7
384 [-]: GETGLOBAL R17 K0       ; R17 := BF_ChannelsSimulator
385 [-]: GETTABLE  R17 R17 K50  ; R17 := R17["GetActualCostTrain"]
386 [-]: MOVE      R18 R7       ; R18 := R7
387 [-]: GETGLOBAL R19 K47      ; R19 := VenationCost
388 [-]: GETTABLE  R19 R19 R6   ; R19 := R19[R6]
389 [-]: GETTABLE  R19 R19 R8   ; R19 := R19[R8]
390 [-]: CALL      R17 3 0      ; R17 to top := R17(R18,R19)
391 [-]: CALL      R15 0 0      ; R15 to top := R15(R16 to top)
392 [-]: CALL      R14 0 2      ; R14 := R14(R15 to top)
393 [-]: EQ        1 R14 K10    ; if R14 == 0 then PC := 410
394 [-]: JMP       410          ; PC := 410
395 [-]: EQ        1 R12 K58    ; if R12 == 100 then PC := 410
396 [-]: JMP       410          ; PC := 410
397 [-]: LOADK     R15 K15      ; R15 := "<text>text="
398 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
399 [-]: GETGLOBAL R17 K19      ; R17 := FormatString
400 [-]: LOADK     R18 K72      ; R18 := "\t"
401 [-]: GETGLOBAL R19 K20      ; R19 := g_tStrings
402 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["STR_LEARN_RETURN_VENATION"]
403 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
404 [-]: MOVE      R19 R14      ; R19 := R14
405 [-]: CALL      R17 3 0      ; R17 to top := R17(R18,R19)
406 [-]: CALL      R16 0 2      ; R16 := R16(R17 to top)
407 [-]: LOADK     R17 K35      ; R17 := " font=106 </text>"
408 [-]: CONCAT    R13 R15 R17  ; R13 := R15 .. R16 .. R17
409 [-]: LOADBOOL  R11 0 0      ; R11 := false
410 [-]: MOVE      R14 R1       ; R14 := R1
411 [-]: LOADK     R15 K15      ; R15 := "<text>text="
412 [-]: GETGLOBAL R16 K16      ; R16 := EncodeComponentsString
413 [-]: GETGLOBAL R17 K19      ; R17 := FormatString
414 [-]: GETGLOBAL R18 K20      ; R18 := g_tStrings
415 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["STR_LEARN_SUCCESS_PERCENTAGE"]
416 [-]: MOVE      R19 R12      ; R19 := R12
417 [-]: CALL      R17 3 0      ; R17 to top := R17(R18,R19)
418 [-]: CALL      R16 0 2      ; R16 := R16(R17 to top)
419 [-]: LOADK     R17 K35      ; R17 := " font=106 </text>"
420 [-]: MOVE      R18 R13      ; R18 := R13
421 [-]: CONCAT    R1 R14 R18   ; R1 := R14 .. R15 .. R16 .. R17 .. R18
422 [-]: GETGLOBAL R14 K75      ; R14 := VenationRequirement
423 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
424 [-]: TEST      R14 0        ; if not R14 then PC := 516
425 [-]: JMP       516          ; PC := 516
426 [-]: GETGLOBAL R14 K75      ; R14 := VenationRequirement
427 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
428 [-]: LEN       R14 R14      ; R14 := # R14
429 [-]: EQ        1 R14 K10    ; if R14 == 0 then PC := 516
430 [-]: JMP       516          ; PC := 516
431 [-]: GETGLOBAL R14 K75      ; R14 := VenationRequirement
432 [-]: GETTABLE  R14 R14 R6   ; R14 := R14[R6]
433 [-]: GETGLOBAL R15 K20      ; R15 := g_tStrings
434 [-]: GETTABLE  R15 R15 K76  ; R15 := R15["STR_NEED_GET_THROUGH"]
435 [-]: TEST      R11 0        ; if not R11 then PC := 440
436 [-]: JMP       440          ; PC := 440
437 [-]: LOADK     R16 K29      ; R16 := "\n"
438 [-]: MOVE      R17 R15      ; R17 := R15
439 [-]: CONCAT    R15 R16 R17  ; R15 := R16 .. R17
440 [-]: MOVE      R16 R1       ; R16 := R1
441 [-]: LOADK     R17 K15      ; R17 := "<text>text="
442 [-]: GETGLOBAL R18 K16      ; R18 := EncodeComponentsString
443 [-]: MOVE      R19 R15      ; R19 := R15
444 [-]: CALL      R18 2 2      ; R18 := R18(R19)
445 [-]: LOADK     R19 K35      ; R19 := " font=106 </text>"
446 [-]: CONCAT    R1 R16 R19   ; R1 := R16 .. R17 .. R18 .. R19
447 [-]: GETGLOBAL R16 K77      ; R16 := ipairs
448 [-]: MOVE      R17 R14      ; R17 := R14
449 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
450 [-]: JMP       501          ; PC := 501
451 [-]: EQ        1 R19 K12    ; if R19 == 1 then PC := 461
452 [-]: JMP       461          ; PC := 461
453 [-]: MOVE      R21 R1       ; R21 := R1
454 [-]: LOADK     R22 K15      ; R22 := "<text>text="
455 [-]: GETGLOBAL R23 K16      ; R23 := EncodeComponentsString
456 [-]: GETGLOBAL R24 K20      ; R24 := g_tStrings
457 [-]: GETTABLE  R24 R24 K78  ; R24 := R24["STR_COMMA"]
458 [-]: CALL      R23 2 2      ; R23 := R23(R24)
459 [-]: LOADK     R24 K35      ; R24 := " font=106 </text>"
460 [-]: CONCAT    R1 R21 R24   ; R1 := R21 .. R22 .. R23 .. R24
461 [-]: LOADK     R21 K39      ; R21 := 106
462 [-]: GETGLOBAL R22 K0       ; R22 := BF_ChannelsSimulator
463 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["emulate"]
464 [-]: TEST      R22 0        ; if not R22 then PC := 477
465 [-]: JMP       477          ; PC := 477
466 [-]: GETTABLE  R22 R20 K79  ; R22 := R20["ID"]
467 [-]: GETTABLE  R22 R0 R22   ; R22 := R0[R22]
468 [-]: TEST      R22 0        ; if not R22 then PC := 475
469 [-]: JMP       475          ; PC := 475
470 [-]: GETTABLE  R22 R20 K79  ; R22 := R20["ID"]
471 [-]: GETTABLE  R22 R0 R22   ; R22 := R0[R22]
472 [-]: GETTABLE  R23 R20 K42  ; R23 := R20["Level"]
473 [-]: LT        0 R22 R23    ; if R22 >= R23 then PC := 484
474 [-]: JMP       484          ; PC := 484
475 [-]: LOADK     R21 K41      ; R21 := 102
476 [-]: JMP       484          ; PC := 484
477 [-]: GETTABLE  R22 R7 K11   ; R22 := R7["GetSkillLevel"]
478 [-]: GETTABLE  R23 R20 K79  ; R23 := R20["ID"]
479 [-]: CALL      R22 2 2      ; R22 := R22(R23)
480 [-]: GETTABLE  R23 R20 K42  ; R23 := R20["Level"]
481 [-]: LT        0 R22 R23    ; if R22 >= R23 then PC := 484
482 [-]: JMP       484          ; PC := 484
483 [-]: LOADK     R21 K41      ; R21 := 102
484 [-]: MOVE      R22 R1       ; R22 := R1
485 [-]: LOADK     R23 K15      ; R23 := "<text>text="
486 [-]: GETGLOBAL R24 K16      ; R24 := EncodeComponentsString
487 [-]: GETGLOBAL R25 K19      ; R25 := FormatString
488 [-]: GETGLOBAL R26 K20      ; R26 := g_tStrings
489 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["STR_LEARN_SKILL_LEVEL"]
490 [-]: GETGLOBAL R27 K17      ; R27 := Table_GetSkillName
491 [-]: GETTABLE  R28 R20 K79  ; R28 := R20["ID"]
492 [-]: GETTABLE  R29 R20 K42  ; R29 := R20["Level"]
493 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
494 [-]: GETTABLE  R28 R20 K42  ; R28 := R20["Level"]
495 [-]: CALL      R25 4 0      ; R25 to top := R25(R26,R27,R28)
496 [-]: CALL      R24 0 2      ; R24 := R24(R25 to top)
497 [-]: LOADK     R25 K45      ; R25 := " font="
498 [-]: MOVE      R26 R21      ; R26 := R21
499 [-]: LOADK     R27 K81      ; R27 := " </text>"
500 [-]: CONCAT    R1 R22 R27   ; R1 := R22 .. R23 .. R24 .. R25 .. R26 .. R27
501 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then R18 := R19 else PC := 503
502 [-]: JMP       451          ; PC := 451
503 [-]: LEN       R16 R14      ; R16 := # R14
504 [-]: LT        0 K12 R16    ; if 1 >= R16 then PC := 515
505 [-]: JMP       515          ; PC := 515
506 [-]: MOVE      R16 R1       ; R16 := R1
507 [-]: LOADK     R17 K15      ; R17 := "<text>text="
508 [-]: GETGLOBAL R18 K16      ; R18 := EncodeComponentsString
509 [-]: GETGLOBAL R19 K19      ; R19 := FormatString
510 [-]: GETGLOBAL R20 K82      ; R20 := STR_ONE_OF
511 [-]: CALL      R19 2 0      ; R19 to top := R19(R20)
512 [-]: CALL      R18 0 2      ; R18 := R18(R19 to top)
513 [-]: LOADK     R19 K35      ; R19 := " font=106 </text>"
514 [-]: CONCAT    R1 R16 R19   ; R1 := R16 .. R17 .. R18 .. R19
515 [-]: LOADBOOL  R11 1 0      ; R11 := true
516 [-]: GETTABLE  R14 R7 K26   ; R14 := R7["GetSkillRecipeKey"]
517 [-]: MOVE      R15 R6       ; R15 := R6
518 [-]: MOVE      R16 R8       ; R16 := R8
519 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
520 [-]: GETGLOBAL R15 K27      ; R15 := GetSkillInfo
521 [-]: MOVE      R16 R14      ; R16 := R14
522 [-]: CALL      R15 2 2      ; R15 := R15(R16)
523 [-]: GETGLOBAL R16 K28      ; R16 := GetSkillDesc
524 [-]: MOVE      R17 R6       ; R17 := R6
525 [-]: MOVE      R18 R8       ; R18 := R8
526 [-]: MOVE      R19 R14      ; R19 := R14
527 [-]: MOVE      R20 R15      ; R20 := R15
528 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
529 [-]: EQ        1 R16 K5     ; if R16 == "" then PC := 550
530 [-]: JMP       550          ; PC := 550
531 [-]: TEST      R11 0        ; if not R11 then PC := 543
532 [-]: JMP       543          ; PC := 543
533 [-]: MOVE      R17 R1       ; R17 := R1
534 [-]: LOADK     R18 K15      ; R18 := "<text>text="
535 [-]: GETGLOBAL R19 K16      ; R19 := EncodeComponentsString
536 [-]: LOADK     R20 K29      ; R20 := "\n"
537 [-]: MOVE      R21 R16      ; R21 := R16
538 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
539 [-]: CALL      R19 2 2      ; R19 := R19(R20)
540 [-]: LOADK     R20 K30      ; R20 := " font=100 </text>"
541 [-]: CONCAT    R1 R17 R20   ; R1 := R17 .. R18 .. R19 .. R20
542 [-]: JMP       550          ; PC := 550
543 [-]: MOVE      R17 R1       ; R17 := R1
544 [-]: LOADK     R18 K15      ; R18 := "<text>text="
545 [-]: GETGLOBAL R19 K16      ; R19 := EncodeComponentsString
546 [-]: MOVE      R20 R16      ; R20 := R16
547 [-]: CALL      R19 2 2      ; R19 := R19(R20)
548 [-]: LOADK     R20 K30      ; R20 := " font=100 </text>"
549 [-]: CONCAT    R1 R17 R20   ; R1 := R17 .. R18 .. R19 .. R20
550 [-]: GETGLOBAL R17 K32      ; R17 := OutputTip
551 [-]: MOVE      R18 R1       ; R18 := R1
552 [-]: LOADK     R19 K33      ; R19 := 300
553 [-]: NEWTABLE  R20 4 0      ; R20 := {}
554 [-]: MOVE      R21 R2       ; R21 := R2
555 [-]: MOVE      R22 R3       ; R22 := R3
556 [-]: MOVE      R23 R4       ; R23 := R4
557 [-]: MOVE      R24 R5       ; R24 := R5
558 [-]: SETLIST   R20 4 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 4
559 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
560 [-]: RETURN    R0 1         ; return 


